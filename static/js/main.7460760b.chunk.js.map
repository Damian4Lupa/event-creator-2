{"version":3,"sources":["pages/CreateEvent.js","pages/Clock.js","pages/ErrorPage.js","components/App.js","serviceWorker.js","index.js"],"names":["CreateEvent","state","img","imgSize","windowWidth","font","text","date","time","fontList","componentDidMount","loadSessionStorage","changeWindowWidth","window","addEventListener","changeImgSize","componentDidUpdate","prevProps","prevState","saveSessionStorage","console","log","changeValue","event","name","target","type","value","setState","changeImg","preventDefault","id","$","attr","changeFont","css","sessionStorage","setItem","getItem","reset","innerWidth","width","this","btnStyle","dataComplete","show_activeButton","to","pathname","className","show_inactiveButton","length","placeholder","onChange","required","autoFocus","htmlFor","role","onClick","Component","Clock","days","hours","minutes","seconds","hoursToMilliseconds","string","slice","clock","endTime","Date","getTime","nowTime","Math","floor","props","location","setInterval","ErrorPage","App","basename","exact","path","component","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7460760b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport $ from \"jquery\";\r\n\r\nclass CreateEvent extends Component {\r\n  state = {\r\n    img: \"img1\",\r\n    imgSize: 0,\r\n    windowWidth: 0,\r\n    font: \"\",\r\n    text: \"\",\r\n    date: \"\",\r\n    time: \"\",\r\n  };\r\n\r\n  fontList = [\r\n    {\r\n      font: \"sans-serif\",\r\n    },\r\n    {\r\n      font: \"monospace\",\r\n    },\r\n    {\r\n      font: \"fantasy\",\r\n    },\r\n    {\r\n      font: \"cursive\",\r\n    },\r\n    {\r\n      font: \"system-ui\",\r\n    },\r\n  ];\r\n\r\n  componentDidMount = () => {\r\n    this.loadSessionStorage();\r\n    this.changeWindowWidth();\r\n    window.addEventListener(\"resize\", this.changeWindowWidth);\r\n    this.changeImgSize(this.state.imgSize);\r\n  };\r\n\r\n  componentDidUpdate = (prevProps, prevState) => {\r\n    this.saveSessionStorage();\r\n    this.loadSessionStorage();\r\n    window.addEventListener(\"resize\", this.changeWindowWidth);\r\n    if (prevState.windowWidth !== this.state.windowWidth) {\r\n      console.log(\"prevState.windowWidth !== this.state.windowWidth\");\r\n      this.changeImgSize(this.state.windowWidth);\r\n    }\r\n  };\r\n\r\n  changeValue = (event) => {\r\n    const name = event.target.type;\r\n    const value = event.target.value;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  changeImg = (event) => {\r\n    event.preventDefault();\r\n    let id = event.target.id;\r\n    $(\"#background\").attr(\"class\", `${id}`);\r\n    this.setState({\r\n      img: id,\r\n    });\r\n  };\r\n\r\n  changeFont = (event) => {\r\n    event.preventDefault();\r\n    let id = event.target.id - 1;\r\n    let font = this.fontList[id].font;\r\n\r\n    $(\".event-font\").css(\"font-family\", font);\r\n\r\n    this.setState({\r\n      font,\r\n    });\r\n  };\r\n\r\n  saveSessionStorage = () => {\r\n    sessionStorage.setItem(\"img\", this.state.img);\r\n    sessionStorage.setItem(\"font\", this.state.font);\r\n    sessionStorage.setItem(\"text\", this.state.text);\r\n    sessionStorage.setItem(\"date\", this.state.date);\r\n    sessionStorage.setItem(\"time\", this.state.time);\r\n  };\r\n\r\n  loadSessionStorage = () => {\r\n    let img = sessionStorage.getItem(\"img\");\r\n    let font = sessionStorage.getItem(\"font\")\r\n      ? sessionStorage.getItem(\"font\")\r\n      : \"\";\r\n    let text = sessionStorage.getItem(\"text\")\r\n      ? sessionStorage.getItem(\"text\")\r\n      : \"\";\r\n    let date = sessionStorage.getItem(\"date\")\r\n      ? sessionStorage.getItem(\"date\")\r\n      : \"\";\r\n    let time = sessionStorage.getItem(\"time\")\r\n      ? sessionStorage.getItem(\"time\")\r\n      : \"\";\r\n\r\n    if (text !== this.state.text) {\r\n      this.setState({\r\n        img,\r\n        font,\r\n        text,\r\n        date,\r\n        time,\r\n      });\r\n    }\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      img: \"img1\",\r\n      font: \"\",\r\n      text: \"\",\r\n      date: \"\",\r\n      time: \"\",\r\n    });\r\n  };\r\n\r\n  changeWindowWidth = () =>\r\n    this.setState({\r\n      windowWidth: window.innerWidth,\r\n    });\r\n\r\n  changeImgSize = (width) => {\r\n    let imgSize = 0;\r\n\r\n    if (width >= 1500) {\r\n      imgSize = 1500;\r\n    } else if (width < 1500 && width >= 1000) {\r\n      imgSize = 1000;\r\n    } else {\r\n      imgSize = 600;\r\n    }\r\n    this.setState({\r\n      imgSize,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { date, time, text, img, imgSize } = this.state;\r\n    const btnStyle = \"btn btn-outline-primary\";\r\n    let dataComplete = false;\r\n\r\n    const show_activeButton = (\r\n      <Link\r\n        to={{\r\n          pathname: \"/clock\",\r\n          state: {\r\n            img: this.state.img,\r\n            imgSize: this.state.imgSize,\r\n            font: this.state.font,\r\n            text: this.state.text,\r\n            date: this.state.date,\r\n            time: this.state.time,\r\n          },\r\n        }}\r\n      >\r\n        <button className={btnStyle}>Get ready!</button>\r\n      </Link>\r\n    );\r\n\r\n    const show_inactiveButton = (\r\n      <button className=\"btn btn-outline-primary disabled\">Get ready!</button>\r\n    );\r\n\r\n    if (text.length > 5 && date !== \"\" && time !== \"\") {\r\n      dataComplete = true;\r\n    } else {\r\n      dataComplete = false;\r\n    }\r\n\r\n    return (\r\n      <div id=\"background\" className={`${img}-${imgSize}`}>\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-6 mx-auto mt-card\">\r\n              <div className=\"card card-signin my-5\">\r\n                <div className=\"card-body\">\r\n                  <h5 className=\"card-title text-center\">event creator</h5>\r\n                  <form className=\"form-signin\">\r\n                    <div className=\"form-label-group\">\r\n                      <input\r\n                        type=\"text\"\r\n                        id=\"inputText\"\r\n                        className=\"form-control event-font\"\r\n                        placeholder=\"Enter the name of the event\"\r\n                        value={text}\r\n                        onChange={this.changeValue}\r\n                        required\r\n                        autoFocus\r\n                      />\r\n                      <label htmlFor=\"inputText\">\r\n                        Enter the name of the event\r\n                      </label>\r\n                    </div>\r\n\r\n                    <div className=\"row mt-4\">\r\n                      <div className=\"col-7\">\r\n                        <div className=\"form-label-group ml-4 mr-3\">\r\n                          <input\r\n                            type=\"date\"\r\n                            id=\"inputDate\"\r\n                            className=\"form-control\"\r\n                            value={date}\r\n                            onChange={this.changeValue}\r\n                            required\r\n                          />\r\n                          <label htmlFor=\"inputDate\">Date</label>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-4\">\r\n                        <div className=\"form-label-group\">\r\n                          <input\r\n                            type=\"time\"\r\n                            id=\"inputTime\"\r\n                            className=\"form-control\"\r\n                            value={time}\r\n                            onChange={this.changeValue}\r\n                            required\r\n                          />\r\n                          <label htmlFor=\"inputTime\">Time</label>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"bordered\">\r\n                      <span className=\"bordered__text mt-2 mb-3\">Font</span>\r\n                    </div>\r\n\r\n                    <div id=\"font\" className=\"btn-group\" role=\"group\">\r\n                      <button\r\n                        id=\"1\"\r\n                        className={btnStyle}\r\n                        onClick={this.changeFont}\r\n                      >\r\n                        <span className=\"btn-font\">1</span>\r\n                      </button>\r\n                      <button\r\n                        id=\"2\"\r\n                        className={btnStyle}\r\n                        onClick={this.changeFont}\r\n                      >\r\n                        <span className=\"btn-font\">2</span>\r\n                      </button>\r\n                      <button\r\n                        id=\"3\"\r\n                        className={btnStyle}\r\n                        onClick={this.changeFont}\r\n                      >\r\n                        <span className=\"btn-font\">3</span>\r\n                      </button>\r\n                      <button\r\n                        id=\"4\"\r\n                        className={btnStyle}\r\n                        onClick={this.changeFont}\r\n                      >\r\n                        <span className=\"btn-font\">4</span>\r\n                      </button>\r\n                      <button\r\n                        id=\"5\"\r\n                        className={btnStyle}\r\n                        onClick={this.changeFont}\r\n                      >\r\n                        <span className=\"btn-font\">5</span>\r\n                      </button>\r\n                    </div>\r\n\r\n                    <div className=\"bordered\">\r\n                      <span className=\"bordered__text my-3\">Image</span>\r\n                    </div>\r\n\r\n                    <div id=\"image\" className=\"btn-group\" role=\"group\">\r\n                      <button\r\n                        id=\"img1\"\r\n                        className={btnStyle}\r\n                        onClick={this.changeImg}\r\n                      >\r\n                        <span className=\"btn-img\">1</span>\r\n                      </button>\r\n                      <button\r\n                        id=\"img2\"\r\n                        className={btnStyle}\r\n                        onClick={this.changeImg}\r\n                      >\r\n                        <span className=\"btn-img\">1</span>\r\n                      </button>\r\n                      <button\r\n                        id=\"img3\"\r\n                        className={btnStyle}\r\n                        onClick={this.changeImg}\r\n                      >\r\n                        <span className=\"btn-img\">1</span>\r\n                      </button>\r\n                      <button\r\n                        id=\"img4\"\r\n                        className={btnStyle}\r\n                        onClick={this.changeImg}\r\n                      >\r\n                        <span className=\"btn-img\">1</span>\r\n                      </button>\r\n                      <button\r\n                        id=\"img5\"\r\n                        className={btnStyle}\r\n                        onClick={this.changeImg}\r\n                      >\r\n                        <span className=\"btn-img\">1</span>\r\n                      </button>\r\n                      <button\r\n                        id=\"img6\"\r\n                        className={btnStyle}\r\n                        onClick={this.changeImg}\r\n                      >\r\n                        <span className=\"btn-img\">1</span>\r\n                      </button>\r\n                      <button\r\n                        id=\"img7\"\r\n                        className={btnStyle}\r\n                        onClick={this.changeImg}\r\n                      >\r\n                        <span className=\"btn-img\">1</span>\r\n                      </button>\r\n                      <button\r\n                        id=\"img8\"\r\n                        className={btnStyle}\r\n                        onClick={this.changeImg}\r\n                      >\r\n                        <span className=\"btn-img\">1</span>\r\n                      </button>\r\n                      <button\r\n                        id=\"img9\"\r\n                        className={btnStyle}\r\n                        onClick={this.changeImg}\r\n                      >\r\n                        <span className=\"btn-img\">1</span>\r\n                      </button>\r\n                      <button\r\n                        id=\"img10\"\r\n                        className={btnStyle}\r\n                        onClick={this.changeImg}\r\n                      >\r\n                        <span className=\"btn-img\">1</span>\r\n                      </button>\r\n                    </div>\r\n\r\n                    <div className=\"row mt-4\">\r\n                      <div className=\"col-auto mr-auto ml-2\">\r\n                        <button className={btnStyle} onClick={this.reset}>\r\n                          Reset\r\n                        </button>\r\n                      </div>\r\n\r\n                      <div className=\"col-auto mr-2\">\r\n                        {dataComplete ? show_activeButton : show_inactiveButton}\r\n                      </div>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateEvent;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport $ from \"jquery\";\r\n\r\nclass Clock extends Component {\r\n  state = {\r\n    img: \"img1\",\r\n    imgSize: 0,\r\n    font: \"\",\r\n    text: \"\",\r\n    date: \"\",\r\n    time: \"\",\r\n\r\n    days: 0,\r\n    hours: 0,\r\n    minutes: 0,\r\n    seconds: 0,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { img, imgSize, font, text, date, time } = this.props.location.state;\r\n\r\n    $(\".event-font\").css(\"font-family\", font);\r\n\r\n    this.setState({\r\n      img,\r\n      imgSize,\r\n      font,\r\n      text,\r\n      date,\r\n      time,\r\n    });\r\n  }\r\n\r\n  hoursToMilliseconds = (string) => {\r\n    if (string.length === 0 || string === \"\") {\r\n      return 0;\r\n    } else {\r\n      let hours = string.slice(0, 2) * 1 * 60 * 60 * 1000;\r\n      let minutes = string.slice(3) * 1 * 60 * 1000;\r\n      let ms = hours + minutes;\r\n      return ms;\r\n    }\r\n  };\r\n\r\n  clock = () => {\r\n    let days = 0;\r\n    let hours = 0;\r\n    let minutes = 0;\r\n    let seconds = 0;\r\n\r\n    const date = this.state.date;\r\n    const time = this.hoursToMilliseconds(this.state.time);\r\n\r\n    const endTime = new Date(date).getTime() + time - 3600000;\r\n    const nowTime = new Date().getTime();\r\n\r\n    days = Math.floor(\r\n      endTime / (1000 * 60 * 60 * 24) - nowTime / (1000 * 60 * 60 * 24)\r\n    );\r\n    if (days < 0) days = days - days * 2;\r\n    if (days >= 0 && days < 10) days = \"0\" + days;\r\n\r\n    hours = Math.floor(\r\n      (endTime / (1000 * 60 * 60) - nowTime / (1000 * 60 * 60)) % 24\r\n    );\r\n    if (hours < 0) hours = hours - hours * 2;\r\n    if (hours >= 0 && hours < 10) hours = \"0\" + hours;\r\n\r\n    minutes = Math.floor((endTime / (1000 * 60) - nowTime / (1000 * 60)) % 60);\r\n    if (minutes < 0) minutes = minutes - minutes * 2;\r\n    if (minutes >= 0 && minutes < 10) minutes = \"0\" + minutes;\r\n\r\n    seconds = Math.floor((endTime / 1000 - nowTime / 1000) % 60);\r\n    if (seconds < 0) seconds = seconds - seconds * 2;\r\n    if (seconds >= 0 && seconds < 10) seconds = \"0\" + seconds;\r\n\r\n    this.setState({\r\n      days,\r\n      hours,\r\n      minutes,\r\n      seconds,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { img, imgSize, text, days, hours, minutes, seconds } = this.state;\r\n\r\n    setInterval(() => {\r\n      this.clock();\r\n    }, 1000);\r\n\r\n    return (\r\n      <div id=\"background\" className={`${img}-${imgSize}`}>\r\n        <Link to=\"/\">\r\n          <button className=\"btn btn-outline-primary mx-4 my-4 float-right\">\r\n            Back\r\n          </button>\r\n        </Link>\r\n\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-7 mt-card-clock\">\r\n              <div className=\"card card-signin\">\r\n                <div className=\"card-body\">\r\n                  <p className=\"event-text event-font mt-4\">{text}</p>\r\n                  <div className=\"event-text event-font mt-5\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-2\"> </div>\r\n                      <div className=\"col\">\r\n                        <span>{days}</span>\r\n                        <h6>\r\n                          <span>days</span>\r\n                        </h6>\r\n                      </div>\r\n\r\n                      <div className=\"col\">\r\n                        <span> {hours}</span>\r\n                        <h6>\r\n                          <span>hrs</span>\r\n                        </h6>\r\n                      </div>\r\n\r\n                      <div className=\"col\">\r\n                        <span> {minutes}</span>\r\n                        <h6>\r\n                          <span>min</span>\r\n                        </h6>\r\n                      </div>\r\n\r\n                      <div className=\"col\">\r\n                        <span> {seconds}</span>\r\n                        <h6>\r\n                          <span> sec</span>\r\n                        </h6>\r\n                      </div>\r\n\r\n                      <div className=\"col-2\"> </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Clock;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction ErrorPage() {\r\n  return (\r\n    <div id=\"background\" className=\"img1-1000\">\r\n      <button className=\"btn btn-outline-primary mx-4 my-4 float-right\">\r\n        <Link to=\"/\">Back</Link>\r\n      </button>\r\n\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-7 mt-card-clock\">\r\n            <div className=\"card card-signin\">\r\n              <div className=\"card-body\">\r\n                <h5 className=\"event-text event-font mt-4\">\r\n                  Ups sorry, no such page\r\n                </h5>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ErrorPage;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  HashRouter,\r\n  Route,\r\n  Switch,\r\n} from \"react-router-dom\";\r\nimport \"normalize.css\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"../styles/App.sass\";\r\nimport \"../styles/Img.sass\";\r\nimport CreateEvent from \"../pages/CreateEvent\";\r\nimport Clock from \"../pages/Clock\";\r\nimport ErrorPage from \"../pages/ErrorPage\";\r\n\r\nclass App extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <HashRouter basename={\"/\"}>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={CreateEvent} />\r\n            <Route path=\"/clock\" component={Clock} />\r\n            <Route component={ErrorPage} />\r\n          </Switch>\r\n        </HashRouter>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}